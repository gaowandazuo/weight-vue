apiVersion: v1
kind: ConfigMap
metadata:
  name: $APP_NAME
  namespace: $APP_NAMESPACE
  labels:
    app: $APP_NAME
data:
  customConfig.json: |-
    {
      "//": "标题",
      "title": "水利统一UE中心",

      "//": "版权信息",
      "copyright": "浪潮智慧科技",

      "//": "加载时显示文字",
      "loadingText": "正在加载中...",

      "//": "语言类型zh、en",
      "i18n": "zh",

      "//": "是否开启logo，不显示时设置false；将logo文件放置到/logo文件夹下，请填写logo文件夹下图片名称（包括扩展名）,图片大小可自适应",
      "logo": "logo-lc.png",

      "//": "使用本地文件时，将.ico文件放置到根路径下。使用远程地址时，填写完整路径",
      "favicon": "./favicon.ico",

      "//": "布局种类：横向布局horizontal、纵向布局vertical、分栏布局column、综合布局comprehensive、常规布局common、浮动布局float",
      "layout": "common",

      "//": "主题名称：默认blue-black、blue-white、blue-pure、green-black、green-white、渐变ocean、red-white、red-black",
      "themeName": "blue-black",

      "//": "菜单背景 none、vab-background",
      "background": "none",

      "//": "分栏风格(仅针对分栏布局column时生效)：横向风格horizontal、纵向风格vertical、卡片风格card、箭头风格arrow",
      "columnStyle": "card",

      "//": "是否开启标签页",
      "showTabs": true,

      "//": "显示标签页时标签页样式：卡片风格card、灵动风格smart、圆滑风格smooth",
      "tabsBarStyle": "smooth",

      "//": "是否开启语言选择组件",
      "showLanguage": true,

      "//": "是否开启刷新组件",
      "showRefresh": true,

      "//": "是否开启搜索组件",
      "showSearch": true,

      "//": "是否开启主题组件",
      "showTheme": true,

      "//": "是否开启通知组件",
      "showNotice": true,

      "//": "是否开启全屏组件",
      "showFullScreen": true,

      "//": "纵向布局、常规布局、综合布局时是否默认收起左侧菜单（不支持分栏布局、横向布局）",
      "collapse": true,

      "//": "是否开启登录拦截",
      "loginInterception": true,

      "//": "使用业务中台认证登录",
      "loginYWZT": false,

      "//": "客户端标识",
      "appApiKey": "shuili-products",

      "//": "客户端密钥",
      "appSecretKey": "o63pnu09r5riogtt1wuo4atz0ptdqbrx",

      "//": "登陆后返回地址",
      "appRedirectUri": "http://localhost:10001/auth-redirect",

      "//": "指定获取access token的URI",
      "appAccessTokenUri": "http://10.110.60.138:8180/auth/oauth/token",

      "//": "用户跳转去获取access token的URI",
      "appUserAuthorizationUri": "http://10.110.60.138:8180/auth/oauth/authorize",

      "//": "注销url",
      "vueAppLogoutUri": "/auth/v1/token/globallogout",

      "//": "client的scope",
      "appScope": "trust",

      "//": "API网关地址",
      "baseURL": "/api"
    }
  nginx.conf: |
    user  nginx;
    worker_processes  1;

    error_log  /var/log/nginx/error.log warn;
    pid        /var/run/nginx.pid;


    events {
        worker_connections  1024;
    }


    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;

        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';

        access_log  /var/log/nginx/access.log  main;

        sendfile        on;
        #tcp_nopush     on;

        keepalive_timeout  65;

        #gzip  on;

        #include /etc/nginx/conf.d/*.conf;

            server {
                    listen 80;
                    server_name  localhost;
                    access_log  /var/log/nginx/host.access.log  main;
                    error_log  /var/log/nginx/error1.log  error;
                    location /wuu {
                             try_files $uri $uri/  /wuu/index.html;
                            alias /usr/share/nginx/wwwroot/html;
                            index  index.html index.htm;

                    }
                    location /api{
                            proxy_pass http://10.110.60.138:8180;
                    }
            }
    }

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kubesphere
    component: $APP_NAME
    tier: backend
  name: $APP_NAME
  namespace: $APP_NAMESPACE
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      app: kubesphere
      component: $APP_NAME
      tier: backend
  template:
    metadata:
      labels:
        app: kubesphere
        component: $APP_NAME
        tier: backend
    spec:
      volumes:
        - name: $VOLUME_NAME1
          configMap:
            name: $APP_NAME
            items:
              - key: customConfig.json
                path: customConfig.json
            defaultMode: 420
        - name: $VOLUME_NAME2
          configMap:
            name: $APP_NAME
            items:
              - key: nginx.conf
                path: nginx.conf
            defaultMode: 420
      containers:
        - image: $REGISTRY/$DOCKERHUB_NAMESPACE/$IMAGE_NAME:$IMAGE_TAG-$BUILD_NUMBER
          imagePullPolicy: Always
          name: $APP_NAME
          lifecycle:
            postStart:
              exec:
                command: ['/bin/sh', '-c', 'echo ${BUILD_NUMBER}']
          ports:
            - name: port1
              containerPort: $PORT1
              protocol: TCP
          volumeMounts:
            - name: $VOLUME_NAME1
              readOnly: true
              mountPath: /usr/share/nginx/wwwroot/html/customConfig.json
              subPath: customConfig.json
            - name: $VOLUME_NAME2
              readOnly: true
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      imagePullSecrets:
        - name: $DOCKERHUB_KEY
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0%
      maxSurge: 100%

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: kubesphere
    component: $APP_NAME
  name: $APP_NAME
  namespace: $APP_NAMESPACE
spec:
  ports:
    - name: http1
      port: $PORT1
      protocol: TCP
      targetPort: $PORT1
  selector:
    app: kubesphere
    component: $APP_NAME
    tier: backend
  sessionAffinity: None
  type: NodePort
